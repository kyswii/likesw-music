swagger: "2.0"
info:
  version: "0.0.1"
  title: Likesw-Music API
# during dev, should point to your local machine
host: localhost:19001
# basePath prefixes all resource paths 
basePath: /music
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /account/create:
      x-swagger-router-controller: account
      post:
        tags:
          - account
        description: Add account
        operationId: createAccount
        parameters:
          - name: "body"
            in: "body"
            description: Account information
            required: true
            schema:
              type: object
        responses:
          "200":
            description: Success
            schema:
              type: object
          # responses may fall through to errors
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  
  /account/load:
      x-swagger-router-controller: account
      get: 
        tags:
          - account
        description: load account information
        operationId: loadAccount
        parameters:
          - name: email
            in: query
            description: Account email
            required: true
            type: "string"
          - name: password
            in: query
            description: Account email
            required: true
            type: "string"
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/Account"
          # responses may fall through to errors
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"

  /account/{email}/update:
    x-swagger-router-controller: account
    put:
      tags:
        - account
      description: Update account informaiton
      operationId: updateAccount
      parameters:
        - name: email
          in: path
          description: Account email
          required: true
          type: "string"
        - name: info
          in: body
          required: true
          schema:
            type: object
      responses:
        "200":
          description: Success
          schema:
            type: "string"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /basic/load:
    x-swagger-router-controller: basic
    get:
      tags: 
        - basic
      description: get data
      operationId: loadBasicData
      responses:
        200:
          description: Success
          schema:
            type: object
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /all/load:
    x-swagger-router-controller: basic
    get:
      tags:
        - basic
      description: get all
      operationId: loadAllData
      responses:
        200:
          description: Success
          schema:
            type: object
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      
  /song/create:
    x-swagger-router-controller: song
    post:
      tags:
        - song
      description: Add song information
      operationId: createSong
      parameters:
        - name: "body"
          in: "body"
          description: Song information
          required: true
          schema:
            $ref: "#/definitions/Song"
      responses:
        "200":
          description: Success
          schema:
            type: "string"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /song/load:
    x-swagger-router-controller: song
    get:
      tags:
        - song
      description: load song information
      operationId: loadSong
      parameters:
        - name: name
          in: query
          description: name
          required: false
          type: "string"
        - name: artist
          in: query
          required: false
          description: artist
          type: "string"
        - name: album
          in: query
          required: false
          description: album
          type: "string"
        - name: tags
          in: query
          required: false
          description: tags
          type: "string"
          
      responses:
        200:
          description: OK
          schema:
            type: object
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    
  /image/create:
    x-swagger-router-controller: image
    post:
      tags:
        - image
      description: Add information
      operationId: createImage
      parameters:
        - name: body
          in: body
          description: Image information
          required: true
          schema:
            $ref: "#/definitions/Image"
      responses:
        200:
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /image/{belong}/load:
    x-swagger-router-controller: image
    get:
      tags:
        - image
      description: Load image information
      operationId: loadImage
      parameters:
        - name: belong
          in: path
          description: belong
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: object
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /share/save:
    x-swagger-router-controller: share
    post:
      tags:
        - share
      description: save share
      operationId: saveComment
      parameters:
        - name: body
          in: body
          description: save info
          required: true
          schema:
            type: string
            format: json
      responses:
        200:
          description: OK
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /collect/save:
    x-swagger-router-controller: collect
    post:
      tags:
        - collect
      description: save collect
      operationId: collectSong
      parameters:
        - name: body
          in: body
          description: info
          required: true
          schema:
            type: string
            format: json
      responses:
        200:
          description: OK
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /messages/load:
    x-swagger-router-controller: messages
    get:
      tags:
        - messages
      description: load messages
      operationId: loadMessages

      responses:
        200:
          description: OK
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /foryou/{id}/load:
    x-swagger-router-controller: foryou
    get:
      tags:
        - foryou
      description: load foryou data
      operationId: loadForyouData
      parameters:
        - name: id
          in: path
          description: account id
          required: true
          type: string
      responses:
        200: 
          description: OK
          schema:
            type: object
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:

  Account:
    properties:
      email:
        type: "string"
      password:
        type: "string"
      name:
        type: "string"
      photo:
        type: "string"
      tags:
        type: "string"
      region:
        type: "string"
        
  Song:
    properties:
      name:
        type: "string"
      artist:
        type: "string"
      album:
        type: "string"
      tags:
        type: "string"
      image:
        type: "string"
      
  Image:
    properties:
      name: 
        type: string
      belong:
        type: string
      tags:
        type: string
      introduction:
        type: string
  
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string